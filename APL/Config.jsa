jsLoad("Code ", "Config", "#include Html\n\nget_help← { 1↓ \"\nThe #include line above provides several nouns and verbs from 1 Html\nConfig nouns:\n   me           define the web page\n   go           link to page\n   \n   onDefine     called when HTML page is defined\n   onLoad       called to load fields\n   \n   goLib        called by Get Lib button\n   goSave       called by Save button\"\n}\n\nget_onDefine← {\n ∊me\n}\n\nthisFetch← ''\nget_onLoad← {\n myConfig← xml «storeGet('Saved Config')»\n myConfig← {2= ≢⍵ : ⍵ ⋄ xml '<Config>\n<Session><css>all-KB.css</css>\n <rows>22</rows>\n <cols>112</cols>\n</Session>\n<Edit><css>all-KB.css</css>\n <rows>24</rows>\n <cols>112</cols>\n</Edit>\n<Fetch></Fetch>\n</Config>'} myConfig\n fields← {(⊂⍵) {xmlValue myConfig ⍺ ⍵}¨ 'css' 'rows' 'cols'}\n 'mySet' Values⍨ (fields 'Session'), fields 'Edit'\n thisFetch← xmlValue myConfig 'Fetch'\n}\n\nget_Lib← {\n myLib← ''\n {∆← «document.getElementById('updateLib').files[_w.data[0]].name»\n  2= '.apl' '.jsa' ⍳ ⊂¯4↑ ∆ : ''\n  myLib← myLib, ⊂¯4↓ ∆\n }¨ ⍳«document.getElementById('updateLib').files.length»\n myLib\n}\n\nget_goSave← {\n wrap← {⍺← ⍺, '>' ⋄ '<', ⍺, ⍵, '</', ⍺, LF}\n mySet← 2 3⍴ Values 'mySet'\n (myCss myRows myCols)← mySet[0;]\n ∆← 'Session' wrap ('css' wrap myCss), ('rows' wrap myRows), 'cols' wrap myCols\n (myCss myRows myCols)← mySet[1;]\n ∆← ∆, 'Edit' wrap ('css' wrap myCss), ('rows' wrap myRows), 'cols' wrap myCols\n ∆← ∆, 'Fetch' wrap {0= ≢⍵ : thisFetch ⋄ ⍵ ⎕join TAB} Lib\n ∆← 'Config' wrap ∆\n ∆ {«storePut(_w.toSimpleString(), _a.toSimpleString())»} 'Saved Config'\n «pageExit()»\n}\n\nget_go← {\n Run 'Config'\n}\n\nget_me← {\n tab← 2 3⍴ ('mySet' List ('all.css' 'Visible')\n  ('all-KB.css' 'Hidden')), 2⍴ 'mySet' Text 10\n tab← 'Session' 'Edit', tab\n tab← '' 'Keyboard' 'Rows' 'Cols'⍪ tab\n tab← ('' 'To update' ')fetch in )lib'\n  '<input id=\"updateLib\" multiple type=\"file\" />')⍪ tab\n tab← tab⍪ '' ('onclick:goSave' Button 'Save') '' ''\n Table tab\n}\n")